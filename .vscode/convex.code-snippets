{
	"Convex Imports": {
		"prefix": "convex:imports",
		"body": [
			"import { v } from \"convex/values\";",
			"import { api, internal } from \"./_generated/api\";",
			"import { Doc, Id } from \"./_generated/dataModel\";",
			"import {",
			"  action,",
			"  internalAction,",
			"  internalMutation,",
			"  internalQuery,",
			"  mutation,",
			"  query,",
			"} from \"./_generated/server\";"
		],
		"scope": "javascript,typescript",
		"isFileTemplate": true,
	},

	"Convex Query": {
		"prefix": "convex:query",
		"body": [
			"export const $1 = query({",
			"  args: {$2},",
			"  handler: async (ctx, args) => {",
			"    $0",
			"  },",
			"});",
		],
		"scope": "javascript,typescript",
	},

	"Convex Internal Query": {
		"prefix": "convex:internalQuery",
		"body": [
			"export const $1 = internalQuery({",
			"  args: {$2},",
			"  handler: async (ctx, args) => {",
			"    $0",
			"  },",
			"});",
		],
		"scope": "javascript,typescript",
	},

	"Convex Mutation": {
		"prefix": "convex:mutation",
		"body": [
			"export const $1 = mutation({",
			"  args: {$2},",
			"  handler: async (ctx, args) => {",
			"    $0",
			"  },",
			"});",
		],
		"scope": "javascript,typescript",
	},

	"Convex Internal Mutation": {
		"prefix": "convex:internalMutation",
		"body": [
			"export const $1 = internalMutation({",
			"  args: {$2},",
			"  handler: async (ctx, args) => {",
			"    $0",
			"  },",
			"});",
		],
		"scope": "javascript,typescript",
	},

	"Convex Action": {
		"prefix": "convex:action",
		"body": [
			"export const $1 = action({",
			"  args: {$2},",
			"  handler: async (ctx, args) => {",
			"    $0",
			"  },",
			"});",
		],
		"scope": "javascript,typescript",
	},

	"Convex Internal Action": {
		"prefix": "convex:internalAction",
		"body": [
			"export const $1 = internalAction({",
			"  args: {$2},",
			"  handler: async (ctx, args) => {",
			"    $0",
			"  },",
			"});",
		],
		"scope": "javascript,typescript",
	},

	"Convex Crons": {
		"prefix": "convex:crons",
		"body": [
			"import { cronJobs } from \"convex/server\";",
			"import { internal } from \"./_generated/api\";",
			"import { internalMutation } from \"./_generated/server\";",
			"import { v } from \"convex/values\";",
			"",
			"const crons = cronJobs();",
			"",
			"export const $1 = internalMutation({",
			"  args: {},",
			"  handler: async (ctx, args) => {",
			"    $0",
			"  },",
			"});",
			"",
			"crons.interval(",
			"  \"$1\",",
			"  { seconds: $2 },",
			"  internal.crons.$1,",
			");",
			"",
			"",
			"export default crons;",
		],
		"scope": "javascript,typescript",
	},

	"Convex Schema": {
		"prefix": "convex:schema",
		"body": [
			"import { defineTable, defineSchema } from \"convex/server\";",
			"import { v } from \"convex/values\";",
			"",
			"export default defineSchema({",
			"  $1: defineTable({",
			"    $0",
			"  }),",
			"});",
		],
		"scope": "javascript,typescript",
	},
}
